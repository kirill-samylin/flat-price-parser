name: CI
on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]
env:
  TOKEN: ${{ secrets.TOKEN }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  FLAT_URL: ${{ secrets.FLAT_URL }}
jobs:
 build-node:
  runs-on: ubuntu-latest
  steps:
   - name: Get repository code
     uses: actions/checkout@v3
   - name: Install dependencies
     run: npm ci
#   - name: Run parser
#     run: node app.js "TOKEN=${{ secrets.TOKEN }} ADMIN_ID=${{ secrets.ADMIN_ID }} FLAT_URL=${{ secrets.FLAT_URL }}"
#     env:
#       CI: true
  deploy:
    needs: build-node
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.SSH_HOST}}
          user: ${{secrets.SSH_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command: |
            cd ${{ secrets.PROJECT_FOLDER }};
            git init;
  #          git checkout main;
  #          git pull;
  #          docker-compose --file docker-compose.prod.yml down;
  #          docker-compose --file docker-compose.prod.yml up -d;
  #          docker system prune --all --force;





